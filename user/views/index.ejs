<html>
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
        <title>simpleMap</title>
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
        <script src="https://api2.sktelecom.com/tmap/js?version=1&format=javascript&appKey="></script>
				<script type="text/javascript">

				// 지도
			function initTmap(){
				var map = new Tmap.Map({
					div:'map_div',
					width : "full",
					height : "full",
				});

								// 보여줄 경유지 개수
								var datasize = <%= datasize %>;
								console.log(datasize);

								// database에서 경유지 정보 받기
								var tbs = "<%= JSON.stringify(row) %>";
								tbs=tbs.replace(/(&#34;)/g,'\"');
								tbs=JSON.parse(tbs);
								//console.log(tbs);

				map.setCenter(new Tmap.LonLat("126.986072", "37.570028").transform("EPSG:4326", "EPSG:3857"), 15);
        routeLayer = new Tmap.Layer.Vector("route");
        map.addLayer(routeLayer);

        markerStartLayer = new Tmap.Layer.Markers("start");
        markerEndLayer = new Tmap.Layer.Markers("end");
        markerWaypointLayer = new Tmap.Layer.Markers("waypoint");

        pointLayer = new Tmap.Layer.Vector("point");
        // 시점, 종점 마커찍기
        // 시점
        map.addLayer(markerStartLayer);

        var size = new Tmap.Size(24, 38);
        var offset = new Tmap.Pixel(-(size.w / 2), -size.h);
        var icon = new Tmap.IconHtml("<img src='http://tmapapis.sktelecom.com/upload/tmap/marker/pin_r_m_s.png' />", size, offset);
        var marker_s = new Tmap.Marker(new Tmap.LonLat("126.98605733268329", "37.568085523663385").transform("EPSG:4326", "EPSG:3857"), icon);
        markerStartLayer.addMarker(marker_s);

        // 종점
        map.addLayer(markerEndLayer);

        var size = new Tmap.Size(24, 38);
        var offset = new Tmap.Pixel(-(size.w / 2), -size.h);
        var icon = new Tmap.IconHtml("<img src='http://tmapapis.sktelecom.com/upload/tmap/marker/pin_r_m_e.png' />", size, offset);
        var marker_e = new Tmap.Marker(new Tmap.LonLat("127.00973587385866", "37.56445848334345").transform("EPSG:4326", "EPSG:3857"), icon);
        markerEndLayer.addMarker(marker_e);

				if(datasize==0){
					//nothing
				}
				else{
        // 경유지 마커 찍기
        map.addLayer(markerWaypointLayer);

        var size = new Tmap.Size(24, 38);
        var offset = new Tmap.Pixel(-(size.w / 2), -size.h);

				for(var i=0; i< tbs.length; i++){
					console.log(tbs[i].lat);
					var icon = new Tmap.IconHtml("<img src='http://tmapapis.sktelecom.com/upload/tmap/marker/pin_b_m_f.png' />", size, offset);
					var marker = new Tmap.Marker(new Tmap.LonLat(tbs[i].long, tbs[i].lat).transform("EPSG:4326", "EPSG:3857"), icon);
					markerWaypointLayer.addMarker(marker);
				}
			}

				// 경유지 정보 폼에 맞게
				/* viaPointId trashbin ID
					 viaPointName trashbin name
					 viaX trashbin longitude
					 viaY trashbin latitude
					 viaTime 600 fixed
				*/
				var viaArr=new Array();
				for(var i=0; i<tbs.length; i++){
					var temp=new Object();
					temp.viaPointId = tbs[i].name;
					temp.viaPointName = tbs[i].name;
					temp.viaX = JSON.stringify(tbs[i].long);
					temp.viaY = JSON.stringify(tbs[i].lat);
					temp.viaTime = "600";

					viaArr.push(temp);
				}
				//console.log(viaArr);
				//var viaArrJson=JSON.stringify(viaArr);
				//console.log(viaArrJson);
				// var temp2=JSON.stringify({
      	// 				  "reqCoordType": "WGS84GEO",
      	// 				  "resCoordType" : "EPSG3857",
      	// 				  "startName": "출발",
      	// 				  "startX": "126.98605733268329",
      	// 				  "startY": "37.568085523663385",
      	// 				  "startTime": "201711121314",
      	// 				  "endName": "도착",
      	// 				  "endX": "127.00973587385866",
      	// 				  "endY": "37.56445848334345",
      	// 				  "searchOption" : "0",
				// 					"viaPoints": viaArr });
				// console.log(temp2);
      // 경유지 최적화 API 사용요청
      var prtcl;
			var headers = {};

			// start
			// data: JSON.stringify({
      // 					  "reqCoordType": "WGS84GEO",
      // 					  "resCoordType" : "EPSG3857",
      // 					  "startName": "출발",
      // 					  "startX": "126.98605733268329",
      // 					  "startY": "37.568085523663385",
      // 					  "startTime": "201711121314",
      // 					  "endName": "도착",
      // 					  "endX": "127.00973587385866",
      // 					  "endY": "37.56445848334345",
      // 					  "searchOption" : "0",
      // 					  "viaPoints": viaArr,
      // 	}),

			if(datasize==0){
				// nothing
			}
			// 경유지 10개 이하
			else if(tbs.length<=10){
				console.log("call 10 points");
      headers["appKey"]="8bad0cf0-5aab-43d7-8850-bfd489dd3cf2";
      $.ajax({
      	type:"POST",
      	headers : headers,
      	url:"https://api2.sktelecom.com/tmap/routes/routeOptimization10?version=1&format=xml",//
      	async:false,
      	contentType: "application/json",
      	data: JSON.stringify({
      					  "reqCoordType": "WGS84GEO",
      					  "resCoordType" : "EPSG3857",
      					  "startName": "출발",
      					  "startX": "126.98605733268329",
      					  "startY": "37.568085523663385",
      					  "startTime": "201711121314",
      					  "endName": "도착",
      					  "endX": "127.00973587385866",
      					  "endY": "37.56445848334345",
      					  "searchOption" : "0",
      					  "viaPoints": viaArr,
      	}),
      	success:function(response){
      		prtcl = response;

      			// 경유지 최적화 결과 Line 그리기
      			//경유지 최적화 결과 POINT 찍기
      			/* -------------- Geometry.Point -------------- */
      			var pointLayer = new Tmap.Layer.Vector("point");
      			var prtclString = new XMLSerializer().serializeToString(prtcl);//xml to String
      		    xmlDoc = $.parseXML( prtclString ),
      		    $xml = $( xmlDoc ),
      		    $intRate = $xml.find("Placemark");
      		    var style_red = {
      		            fillColor:"#FF0000",
      		            fillOpacity:0.2,
      		            strokeColor: "#FF0000",
      		            strokeWidth: 3,
      		            strokeDashstyle: "solid",
      		            pointRadius: 2,
      		            title: "this is a red line"
      		       };
      		    $intRate.each(function(index, element) {
      		    	var nodeType = element.getElementsByTagName("tmap:nodeType")[0].childNodes[0].nodeValue;
      				if(nodeType == "POINT"){
      					var point = element.getElementsByTagName("coordinates")[0].childNodes[0].nodeValue.split(',');
      					var geoPoint =new Tmap.Geometry.Point(point[0],point[1]);
      					var pointFeature = new Tmap.Feature.Vector(geoPoint, null, style_red);
      					pointLayer.addFeatures([pointFeature]);
      				}
      		    });
      		    map.addLayer(pointLayer);
      		    /* -------------- Geometry.Point -------------- */
      		    //경유지 최적화 결과 Line 그리기
      			routeLayer.style ={
      					fillColor:"#FF0000",
      			        fillOpacity:0.2,
      			        strokeColor: "#FF0000",
      			        strokeWidth: 3,
      			        strokeDashstyle: "solid",
      			        pointRadius: 2,
      			        title: "this is a red line"
      			}
      			var kmlForm = new Tmap.Format.KML().read(prtcl);
      		    routeLayer.addFeatures(kmlForm);


      			// 경유지 최적화 결과 반경만큼 지도 레벨 조정
      			map.zoomToExtent(routeLayer.getDataExtent());

      		},
      		error:function(request,status,error){
      			console.log("code:"+request.status+"\n"+"message:"+request.responseText+"\n"+"error:"+error);
      		}
				});
			}

			// 경유지 20개 이하
			else if(tbs.length<=20){
				console.log("call 20 points");
      headers["appKey"]="";
      $.ajax({
      	type:"POST",
      	headers : headers,
      	url:"https://api2.sktelecom.com/tmap/routes/routeOptimization20?version=1&format=xml",//
      	async:false,
      	contentType: "application/json",
      	data: JSON.stringify({
      					  "reqCoordType": "WGS84GEO",
      					  "resCoordType" : "EPSG3857",
      					  "startName": "출발",
      					  "startX": "126.98605733268329",
      					  "startY": "37.568085523663385",
      					  "startTime": "201711121314",
      					  "endName": "도착",
      					  "endX": "127.00973587385866",
      					  "endY": "37.56445848334345",
      					  "searchOption" : "0",
      					  "viaPoints": viaArr,
      	}),
      	success:function(response){
      		prtcl = response;

      			// 경유지 최적화 결과 Line 그리기
      			//경유지 최적화 결과 POINT 찍기
      			/* -------------- Geometry.Point -------------- */
      			var pointLayer = new Tmap.Layer.Vector("point");
      			var prtclString = new XMLSerializer().serializeToString(prtcl);//xml to String
      		    xmlDoc = $.parseXML( prtclString ),
      		    $xml = $( xmlDoc ),
      		    $intRate = $xml.find("Placemark");
      		    var style_red = {
      		            fillColor:"#FF0000",
      		            fillOpacity:0.2,
      		            strokeColor: "#FF0000",
      		            strokeWidth: 3,
      		            strokeDashstyle: "solid",
      		            pointRadius: 2,
      		            title: "this is a red line"
      		       };
      		    $intRate.each(function(index, element) {
      		    	var nodeType = element.getElementsByTagName("tmap:nodeType")[0].childNodes[0].nodeValue;
      				if(nodeType == "POINT"){
      					var point = element.getElementsByTagName("coordinates")[0].childNodes[0].nodeValue.split(',');
      					var geoPoint =new Tmap.Geometry.Point(point[0],point[1]);
      					var pointFeature = new Tmap.Feature.Vector(geoPoint, null, style_red);
      					pointLayer.addFeatures([pointFeature]);
      				}
      		    });
      		    map.addLayer(pointLayer);
      		    /* -------------- Geometry.Point -------------- */
      		    //경유지 최적화 결과 Line 그리기
      			routeLayer.style ={
      					fillColor:"#FF0000",
      			        fillOpacity:0.2,
      			        strokeColor: "#FF0000",
      			        strokeWidth: 3,
      			        strokeDashstyle: "solid",
      			        pointRadius: 2,
      			        title: "this is a red line"
      			}
      			var kmlForm = new Tmap.Format.KML().read(prtcl);
      		    routeLayer.addFeatures(kmlForm);


      			// 경유지 최적화 결과 반경만큼 지도 레벨 조정
      			map.zoomToExtent(routeLayer.getDataExtent());

      		},
      		error:function(request,status,error){
      			console.log("code:"+request.status+"\n"+"message:"+request.responseText+"\n"+"error:"+error);
      		}
				});
			}

			// 경유지 30개 이하
			else if(tbs.length<=30){
				console.log("call 30 points");
      headers["appKey"]="8bad0cf0-5aab-43d7-8850-bfd489dd3cf2";
      $.ajax({
      	type:"POST",
      	headers : headers,
      	url:"https://api2.sktelecom.com/tmap/routes/routeOptimization30?version=1&format=xml",//
      	async:false,
      	contentType: "application/json",
      	data: JSON.stringify({
      					  "reqCoordType": "WGS84GEO",
      					  "resCoordType" : "EPSG3857",
      					  "startName": "출발",
      					  "startX": "126.98605733268329",
      					  "startY": "37.568085523663385",
      					  "startTime": "201711121314",
      					  "endName": "도착",
      					  "endX": "127.00973587385866",
      					  "endY": "37.56445848334345",
      					  "searchOption" : "0",
      					  "viaPoints": viaArr,
      	}),
      	success:function(response){
      		prtcl = response;

      			// 경유지 최적화 결과 Line 그리기
      			//경유지 최적화 결과 POINT 찍기
      			/* -------------- Geometry.Point -------------- */
      			var pointLayer = new Tmap.Layer.Vector("point");
      			var prtclString = new XMLSerializer().serializeToString(prtcl);//xml to String
      		    xmlDoc = $.parseXML( prtclString ),
      		    $xml = $( xmlDoc ),
      		    $intRate = $xml.find("Placemark");
      		    var style_red = {
      		            fillColor:"#FF0000",
      		            fillOpacity:0.2,
      		            strokeColor: "#FF0000",
      		            strokeWidth: 3,
      		            strokeDashstyle: "solid",
      		            pointRadius: 2,
      		            title: "this is a red line"
      		       };
      		    $intRate.each(function(index, element) {
      		    	var nodeType = element.getElementsByTagName("tmap:nodeType")[0].childNodes[0].nodeValue;
      				if(nodeType == "POINT"){
      					var point = element.getElementsByTagName("coordinates")[0].childNodes[0].nodeValue.split(',');
      					var geoPoint =new Tmap.Geometry.Point(point[0],point[1]);
      					var pointFeature = new Tmap.Feature.Vector(geoPoint, null, style_red);
      					pointLayer.addFeatures([pointFeature]);
      				}
      		    });
      		    map.addLayer(pointLayer);
      		    /* -------------- Geometry.Point -------------- */
      		    //경유지 최적화 결과 Line 그리기
      			routeLayer.style ={
      					fillColor:"#FF0000",
      			        fillOpacity:0.2,
      			        strokeColor: "#FF0000",
      			        strokeWidth: 3,
      			        strokeDashstyle: "solid",
      			        pointRadius: 2,
      			        title: "this is a red line"
      			}
      			var kmlForm = new Tmap.Format.KML().read(prtcl);
      		    routeLayer.addFeatures(kmlForm);


      			// 경유지 최적화 결과 반경만큼 지도 레벨 조정
      			map.zoomToExtent(routeLayer.getDataExtent());

      		},
      		error:function(request,status,error){
      			console.log("code:"+request.status+"\n"+"message:"+request.responseText+"\n"+"error:"+error);
      		}
				});
			}

			// 경유지 100개 이하
			else if(tbs.length<=100){
				console.log("call 100 points");
      headers["appKey"]="8bad0cf0-5aab-43d7-8850-bfd489dd3cf2";
      $.ajax({
      	type:"POST",
      	headers : headers,
      	url:"https://api2.sktelecom.com/tmap/routes/routeOptimization100?version=1&format=xml",//
      	async:false,
      	contentType: "application/json",
      	data: JSON.stringify({
      					  "reqCoordType": "WGS84GEO",
      					  "resCoordType" : "EPSG3857",
      					  "startName": "출발",
      					  "startX": "126.98605733268329",
      					  "startY": "37.568085523663385",
      					  "startTime": "201711121314",
      					  "endName": "도착",
      					  "endX": "127.00973587385866",
      					  "endY": "37.56445848334345",
      					  "searchOption" : "0",
      					  "viaPoints": viaArr,
      	}),
      	success:function(response){
      		prtcl = response;

      			//경유지 최적화 결과 POINT 찍기
      			/* -------------- Geometry.Point -------------- */
      			var pointLayer = new Tmap.Layer.Vector("point");
      			var prtclString = new XMLSerializer().serializeToString(prtcl);//xml to String
      		    xmlDoc = $.parseXML( prtclString ),
      		    $xml = $( xmlDoc ),
      		    $intRate = $xml.find("Placemark");
      		    var style_red = {
      		            fillColor:"#FF0000",
      		            fillOpacity:0.2,
      		            strokeColor: "#FF0000",
      		            strokeWidth: 3,
      		            strokeDashstyle: "solid",
      		            pointRadius: 2,
      		            title: "this is a red line"
      		       };
      		    $intRate.each(function(index, element) {
      		    	var nodeType = element.getElementsByTagName("tmap:nodeType")[0].childNodes[0].nodeValue;
      				if(nodeType == "POINT"){
      					var point = element.getElementsByTagName("coordinates")[0].childNodes[0].nodeValue.split(',');
      					var geoPoint =new Tmap.Geometry.Point(point[0],point[1]);
      					var pointFeature = new Tmap.Feature.Vector(geoPoint, null, style_red);
      					pointLayer.addFeatures([pointFeature]);
      				}
      		    });
      		    map.addLayer(pointLayer);
      		    /* -------------- Geometry.Point -------------- */
      		    //경유지 최적화 결과 Line 그리기
      			routeLayer.style ={
      					fillColor:"#FF0000",
      			        fillOpacity:0.2,
      			        strokeColor: "#FF0000",
      			        strokeWidth: 3,
      			        strokeDashstyle: "solid",
      			        pointRadius: 2,
      			        title: "this is a red line"
      			}
      			var kmlForm = new Tmap.Format.KML().read(prtcl);
      		    routeLayer.addFeatures(kmlForm);


      			// 경유지 최적화 결과 반경만큼 지도 레벨 조정
      			map.zoomToExtent(routeLayer.getDataExtent());

      		},
      		error:function(request,status,error){
      			console.log("code:"+request.status+"\n"+"message:"+request.responseText+"\n"+"error:"+error);
      		}
				});
			}
			else{
				//nothing
			}
			// end
			}

		</script>
		</head>

		<body onload="initTmap()">
        <div id="map_div">
				</div>
    </body>
</html>
